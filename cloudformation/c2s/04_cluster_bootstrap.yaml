AWSTemplateFormatVersion: 2010-09-09
Description: Template for OpenShift Cluster Bootstrap (EC2 Instance, Security Groups and IAM)

Parameters:
  InfrastructureName:
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: >-
      Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
    Description: >-
      A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster. You should
      use the value generated when creating the manifest files using `openshift-install create manifests`.
    Type: String
    Default: "abc123"

  RhcosAmi:
    Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
    Type: AWS::EC2::Image::Id
    Default: "ami-01c8b6b6082a42b91"

  AllowedBootstrapSshCidr:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[0-9]|2[0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-32.
    Description: CIDR block to allow SSH access to the bootstrap node.
    Default: 0.0.0.0/0
    Type: String

  PublicSubnet:
    Description: The public subnet to launch the bootstrap node into.
    Type: AWS::EC2::Subnet::Id

  MasterSecurityGroupId:
    Description: The master security group ID.
    Type: AWS::EC2::SecurityGroup::Id

  VpcId:
    Description: The VPC-scoped resources will belong to this VPC.
    Type: AWS::EC2::VPC::Id

  IgnitionLocation:
    Description: >-
      Ignition config file location. (Ex: s3://my-s3-bucket/bootstrap.ign)
    Type: String
    Default: "s3://dan-combine/bootstrap.ign"

  CertificateAuthorities:
    Description: >-
      Base64 encoded certificate authority string to use, such as data:text/plain;charset=utf-8;base64,ABC...xYz==.
      You should use the value generated when creating the ignition config files using
      `openshift-install create ignition-configs`.
    Type: String
    Default: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQxRENDQXJ5Z0F3SUJBZ0lEQTlqek1BMEdDU3FHU0liM0RRRUJDd1VBTUhveEN6QUpCZ05WQkFZVEFsVlQKTVFzd0NRWURWUVFJREFKV1FURVBNQTBHQTFVRUJ3d0dVbVZ6ZEc5dU1SMHdHd1lEVlFRS0RCUlRaWEYxYjJsaApJRWh2YkdScGJtZHpJRWx1WXpFUU1BNEdBMVVFQ3d3SFEyOXRZbWx1WlRFY01Cb0dBMVVFQXd3VFEyOXRZbWx1ClpTQkRRU0F0SUZKbFpFaGhkREFlRncweE9UQTRNVFl3TkRBd01EQmFGdzB5T0RBNE1UWXdOREF3TURCYU1Ib3gKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSldRVEVQTUEwR0ExVUVCd3dHVW1WemRHOXVNUjB3R3dZRApWUVFLREJSVFpYRjFiMmxoSUVodmJHUnBibWR6SUVsdVl6RVFNQTRHQTFVRUN3d0hRMjl0WW1sdVpURWNNQm9HCkExVUVBd3dUUTI5dFltbHVaU0JEUVNBdElGSmxaRWhoZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUpXM3FDNnNDTkY1OFA1ZnoyUDF1bXErSlo2elU5UjJicFJWWHlEb3MxajQ1MHlnT2ZYcwp5eTVkelo0Yk93N0d5S1ZaeXZUOGdkR1lVQWowMnFzYzZXdzQxNjFKQWJYWHdnUTF0clNmakg1eGVLMEV5ajhqCjJlanhvZUc1UVJCZG1WaDVaQXhxMk9VSTV0RERGRlQ4ZFUrRE5sSVl6YlZhQ0ZmZzdjN1dQQXNTZkZYeFFKV24Kb1U4NW10Z3FLR2kvL0lhZXJOSkFrTys5MDB1R24zcVkwc0d6YkZQb292OU8rQmEzaDFVOHk4dVJXdGEwODBvOQpBNXp2NzRTNXJHYVBuaUl3YzlKNmx2S2JmZVhyL0NZcXlsb0hKc0Fhek5XeXVGOWZpTU5GODdRZ3dsaWhibFhyClhyTm9iN05hajBIdHFTeCtvVHdvdk51SWFZVXpYN212MTNrQ0F3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUUQKQWdHR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCakMwdnR4cDFBc01ma2RjaHhWTWlvOQp6WUEzTUI4R0ExVWRJd1FZTUJhQUZCakMwdnR4cDFBc01ma2RjaHhWTWlvOXpZQTNNQTBHQ1NxR1NJYjNEUUVCCkN3VUFBNElCQVFBdjdZbkNORkdNZjZrWkdVOVFWdlRiNWRiT3FqdElsTEFGYkM1a0NkUktyYzZ6M2NyQlU2K0QKZWpxRUxmdnVTN1RiaHByREkrelRVVjF4bC9PcXU4Y3NiQWREVjBMSVYxa0MvM3F4ZkorYWhubGtQUkJQZm03Rgoxano1akNvaHdDbWk0RXdOc3BHNVlpZ3M2VUQzNVE4RTZqT1ZKSkZXOVdjT2hUVDJOSU9kbDM3czA1eE5YRnVLCjYxc0k5bzk4N1d5UzFld0JWNHFDUVU2OXprRG9GU0RReWJQUkhkQlU4SGxJNFUyWGl6Q3FaU0dNRGIwUG9yQUwKTEZYbUphQk4zWm5GNmdHNHBpT3M5eHY3ZC96SllyK2N2TDhqdlh2RFhwelRzampWcCs0aEhJckM5SlJZU2dZRgowclFBU3g3UFlWY1UrRWV6NkZ2MXJORXJEWU1FZnpheQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlENERDQ0FzaWdBd0lCQWdJRVRyWG5vakFOQmdrcWhraUc5dzBCQVFzRkFEQjZNUXN3Q1FZRFZRUUdFd0pWClV6RUxNQWtHQTFVRUNBd0NWa0V4RHpBTkJnTlZCQWNNQmxKbGMzUnZiakVkTUJzR0ExVUVDZ3dVVTJWeGRXOXAKWVNCSWIyeGthVzVuY3lCSmJtTXhFREFPQmdOVkJBc01CME52YldKcGJtVXhIREFhQmdOVkJBTU1FME52YldKcApibVVnUTBFZ0xTQlNaV1JJWVhRd0hoY05NVGt3T0RFMk1EUXdNREF3V2hjTk1qWXdPREUyTURRd01EQXdXakNCCmdURUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWxaQk1ROHdEUVlEVlFRSERBWlNaWE4wYjI0eEhUQWIKQmdOVkJBb01GRk5sY1hWdmFXRWdTRzlzWkdsdVozTWdTVzVqTVJBd0RnWURWUVFMREFkRGIyMWlhVzVsTVNNdwpJUVlEVlFRRERCcERiMjFpYVc1bElFTkJJRk5wWjI1bGNpQXRJRkpsWkVoaGREQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFJTFBvMjJqOTB0TldPNEhuVFF5TFRRcnRZVkpVWCsxanl0MFMvR0sKR1Y2SStWZVZkK3ZwYVpOVzIzYk5WSTBwdmdRU0p2RzZidzdIV0hGTGMxZ2ZBcmhxV2RXdzRnOU9oVWI0bVF3cAp2Z0hNQ2huRVhBZ0h0L3JhL1lybFp3c2U5NXR3Y0ZPTExQWWtrelA3eGgzSTFYN2VoZkc4bDJFOExnUGNkbTJxCkhUWFBjUER0U1J1ZHlqTTBEbXhQWFhCMlR2b3dxdytoUTQzNGd2N0pyd0hTVDhBTm84YVA2ay9PMkJNaDBxVzUKdTlPU2N3NnNlRWxYelF4RTYwcU56bjVDRkRkbWQzUEh4S2tCckwyemM2SVRLMGYwTDdmcXdQT09xdEZjSmxjegpkK1pubmlPZHlHYk9OZEpNVktjd3hHdUtyYWUzbXI2RzAxdDU1YXVoNG9XWkhzc0NBd0VBQWFObU1HUXdEZ1lEClZSMFBBUUgvQkFRREFnR0dNQklHQTFVZEV3RUIvd1FJTUFZQkFmOENBUUF3SFFZRFZSME9CQllFRkNScWlTQU8KTG8rSTVrbGNNc3ZDSmhIUy9EaWhNQjhHQTFVZEl3UVlNQmFBRkJqQzB2dHhwMUFzTWZrZGNoeFZNaW85ellBMwpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJUVzFVTWloTWZ1QkVEUVdqWExrM0N4WjRydmFhSGcvU2dIZElGCnpsb3krUVJ2aXlPWXBuOWFLdDNtb1ZOeTE4QTFHcVRKYWhNWmJmc1FadFFlUlpIRzBrK0JkUXpESStGSFVjK1QKMEJnSGFRYUFlZXdxempERFF2WFMrdVpsMWZueXluU2Q0L1lJWEdmRDFvUk1SWFMyQURJOE9sNlZ5ZUpudk5JQgpvSkp3ZHpVVnIwYnRsVCtpVXF0SUxWQkZGcUNzZjZOTVFXNThsWVJBT3AxMDNJelQ0cU05MXFLTGRYalFUdGxpCnliLy9iODU4ZU5waWhla3N4V3hydndveldSUjlhRFdWRnRPQ29ucmk2Uzlrek9RUWI4SlJTRTlCOHVJNXg5Wk4KS09EYmoxRWxTY0VGNHBQMXFMaXB3Yi9lMThyNkF5R0FwZjlZcEtGWHRDUE9Yd2V2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"

#  AutoRegisterELB:
#    AllowedValues:
#    - "yes"
#    - "no"
#    Description: Do you want to invoke NLB registration, which requires a Lambda ARN parameter?
#    Default: "yes"
#    Type: String

#  RegisterNlbIpTargetsLambdaArn:
#    Description: ARN for NLB IP target registration lambda.
#    Type: String

#  ExternalApiTargetGroupArn:
#    Description: ARN for external API load balancer target group.
#    Type: String

  InternalApiTargetGroupArn:
    Description: ARN for internal API load balancer target group.
    Type: String
    Default: "arn:aws:elasticloadbalancing:us-east-1:485015763915:targetgroup/abc123-aint/b8684ecd670f3d6b"

  InternalServiceTargetGroupArn:
    Description: ARN for internal service load balancer target group.
    Type: String
    Default: "arn:aws:elasticloadbalancing:us-east-1:485015763915:targetgroup/abc123-sint/bc6e26819f263837"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Cluster Information"
      Parameters:
      - InfrastructureName
    - Label:
        default: "Host Information"
      Parameters:
      - RhcosAmi
      - IgnitionLocation
      - MasterSecurityGroupId
    - Label:
        default: "Network Configuration"
      Parameters:
      - VpcId
      - AllowedBootstrapSshCidr
      - PublicSubnet
    - Label:
        default: "Load Balancer Automation"
      Parameters:
#      - AutoRegisterELB
#      - RegisterNlbIpTargetsLambdaArn
#      - ExternalApiTargetGroupArn
      - InternalApiTargetGroupArn
      - InternalServiceTargetGroupArn
    ParameterLabels:
      InfrastructureName:
        default: "Infrastructure Name"
      VpcId:
        default: "VPC ID"
      AllowedBootstrapSshCidr:
        default: "Allowed SSH Source"
      PublicSubnet:
        default: "Public Subnet"
      RhcosAmi:
        default: "Red Hat Enterprise Linux CoreOS AMI ID"
      IgnitionLocation:
        default: "Bootstrap Ignition Source"
      MasterSecurityGroupId:
        default: "Master Security Group ID"
#      AutoRegisterELB:
#        default: "Use Provided ELB Automation"

#Conditions:
#  DoRegistration: !Equals ["yes", !Ref AutoRegisterELB]

Resources:

#  BootstrapIamRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: !Join ["-", [!Ref InfrastructureName, "bootstrap", "role"]]
#      AssumeRolePolicyDocument:
#        Version: "2012-10-17"
#        Statement:
#        - Effect: "Allow"
#          Principal:
#            Service:
#            - "ec2.amazonaws.com"
#          Action:
#          - "sts:AssumeRole"
#      Path: "/"
#      Policies:
#      - PolicyName: !Join ["-", [!Ref InfrastructureName, "bootstrap", "policy"]]
#        PolicyDocument:
#          Version: "2012-10-17"
#          Statement:
#          - Effect: "Allow"
#            Action: "ec2:Describe*"
#            Resource: "*"
#          - Effect: "Allow"
#            Action: "ec2:AttachVolume"
#            Resource: "*"
#          - Effect: "Allow"
#            Action: "ec2:DetachVolume"
#            Resource: "*"
#          - Effect: "Allow"
#            Action: "s3:GetObject"
#            Resource: "*"
#      Tags:
#      - Key: "Name"
#        Value: !Join ["-", [!Ref InfrastructureName, "bootstrap", "role"]]
#      - Key: !Join ["", [kubernetes.io/cluster/, !Ref InfrastructureName]]
#        Value: owned

#  BootstrapInstanceProfile:
#    Type: "AWS::IAM::InstanceProfile"
#    Properties:
#      InstanceProfileName: !Join ["-", [!Ref InfrastructureName, "bootstrap", "profile"]]
#      Roles:
#      - Ref: "BootstrapIamRole"

  BootstrapSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [!Ref InfrastructureName, "bootstrap", "sg"]]
      GroupDescription: Cluster Bootstrap Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref AllowedBootstrapSshCidr
      - IpProtocol: tcp
        ToPort: 19531
        FromPort: 19531
        CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId

  BootstrapInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref RhcosAmi
      IamInstanceProfile: 'Combine-Policy-TSInstanceProfileWLDEVELOPER-1BU3AI9ABLXLB'
      InstanceType: "i3.large"
      NetworkInterfaces:
      - AssociatePublicIpAddress: "false"
        DeviceIndex: "0"
        GroupSet:
        - !Ref "BootstrapSecurityGroup"
        - !Ref "MasterSecurityGroupId"
        SubnetId: !Ref "PublicSubnet"
      UserData:
        Fn::Base64: !Sub [
          '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}',
          {
            SOURCE: !Ref IgnitionLocation,
            CA_BUNDLE: !Ref CertificateAuthorities
          }
        ]
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref InfrastructureName, "bootstrap"]]
      - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
        Value: "owned"

#  RegisterBootstrapApiTarget:
#    Condition: DoRegistration
#    Type: Custom::NLBRegister
#    Properties:
#      ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
#      TargetArn: !Ref ExternalApiTargetGroupArn
#      TargetIp: !GetAtt BootstrapInstance.PrivateIp

#  RegisterBootstrapInternalApiTarget:
#    Condition: DoRegistration
#    Type: Custom::NLBRegister
#    Properties:
#      ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
#      TargetArn: !Ref InternalApiTargetGroupArn
#      TargetIp: !GetAtt BootstrapInstance.PrivateIp

#  RegisterBootstrapInternalServiceTarget:
#    Condition: DoRegistration
#    Type: Custom::NLBRegister
#    Properties:
#      ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
#      TargetArn: !Ref InternalServiceTargetGroupArn
#      TargetIp: !GetAtt BootstrapInstance.PrivateIp

Outputs:
  BootstrapInstanceId:
    Description: Bootstrap Instance ID.
    Value: !Ref BootstrapInstance

#  BootstrapPublicIp:
#    Description: The bootstrap node public IP address.
#    Value: !GetAtt BootstrapInstance.PublicIp

  BootstrapPrivateIp:
    Description: The bootstrap node private IP address.
    Value: !GetAtt BootstrapInstance.PrivateIp
