---
AWSTemplateFormatVersion: 2010-09-09

Description: Calls OpenShift Sub Templates # TODO wait handlers to ensure proper start up

Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                default: Creation Configuration
              Parameters:
                - Owner
                - Classification
                - PartitionName
            - Label:
                default: Network Configuration
              Parameters:
                - VpcId
                - VpcCIDR
                - PublicSubnetId1
                - PublicSubnetId2
                - PublicSubnetId3
                - PrivateSubnetId1
                - PrivateSubnetId2
                - PrivateSubnetId3
                - RegistryServerIp
                - YumRepoURL
                - NtpIp
                - ElbScheme
            - Label:
                default: DNS Configuration
              Parameters:
                - CertificateArn
            - Label:
                default: Amazon EC2 Configuration
              Parameters:
                - Ec2ServiceName
                - AmiId
                - KeyName
                - RootVolumeSize
                - AdditionalVolumeSize
                - StorageVolumeSize
                - URL
                - MyRegion
            - Label:
                default: OpenShift Hosts Configuration
              Parameters:
                - AnsibleInstanceType
                - MasterInstanceType
                - NumberOfMasters
                - InfraInstanceType
                - NumberOfInfras
                - ComputeInstanceType
                - NumberOfComputes
                - InfraStorageInstanceType
                - NumberOfInfraStorages
                - ComputeStorageStackInstanceType
                - NumberOfComputeStorages
            - Label:
                default: Amazon S3 Configuration
              Parameters:
                - S3ServiceName
                - S3ArtifactsPath
                - S3CredentialsPath
                - S3RegistryPath
            - Label:
                default: OpenShift Configuration
              Parameters:
                - OpenShiftVersion
                - EnableDNS
                - RunDeploymentPlaybooks
                - OpenshiftMasterDefaultSubdomain
                - OpenshiftSubdomain
                - Password
                - SsoHost
                - SsoClientSecret
                - SsoGeoaxisIdentityProviderAlias
                - LoggingEsPvcSize
                - MetricsStorageVolumeSize
                - EnableStorage
                - EnableStorageGlusterfsStorageclassDefault
                - EnableCloudformsInstall
                - VolumeDeviceNamePrefix
            - Label:
                default: Alarms Configuration
              Parameters:
                - EnableAlarms
                - CPUPercentage


        ParameterLabels:
            AmiId:
                default: AMI Id
            AnsibleInstanceType:
                default: Ansible Instance Type
            MasterInstanceType:
                default: Master Instance Type
            NumberOfMasters:
                default: Number of Master Servers
            ComputeInstanceType:
                default: Compute Instance Type
            NumberOfComputes:
                default: Number of Compute Servers
            InfraInstanceType:
                default: Infra instance type
            NumberOfInfras:
                default: Number of Infra Servers
            InfraStorageInstanceType:
                default: Infra Storage instance type
            NumberOfInfraStorages:
                default: Number of Infra Storage Servers
            ComputeStorageStackInstanceType:
                default: Compute Storage instance type
            NumberOfComputeStorages:
                default: Number of Compute Storage Servers
            KeyName:
                default: SSH Key Name
            S3ArtifactsPath:
                default: S3 Path to the Artifacts
            S3CredentialsPath:
                default: S3 Path to the Credentials
            S3RegistryPath:
                default: S3 Path to the OpenShift Registry backup
            PublicSubnetId1:
                default: Public Subnet 1
            PublicSubnetId2:
                default: Public Subnet 2
            PublicSubnetId3:
                default: Public Subnet 3
            PrivateSubnetId1:
                default: Private Subnet 1
            PrivateSubnetId2:
                default: Private Subnet 2
            PrivateSubnetId3:
                default: Private Subnet 3
            RootVolumeSize:
                default: Root Volume Size
            AdditionalVolumeSize:
                default: Additional Volume Size
            StorageVolumeSize:
                default: Storage Volume Size
            Owner:
                default: Owner Name
            URL:
                default: URL for Disconnected Install
            MyRegion:
                default: Region to use for Disconnected Install
            Ec2ServiceName:
                default: Address of the EC2 Service
            S3ServiceName:
                default: Address of the S3 Service
            PartitionName:
                default: AWS Partition Name
            EnableDNS:
                default: Enable DNS
            OpenshiftMasterDefaultSubdomain:
                default: Subdomain of the OpenShift Console
            OpenshiftSubdomain:
                default: Openshift Cluster Hostname
            Password:
                default: Password for OpenShift
            CertificateArn:
                default: ARN of the Certificate
            VpcId:
                default: Vpc Id
            VpcCIDR:
                default: Vpc CIDR
            OpenShiftVersion:
                default: OpenShift Version
            YumRepoURL:
                default: Yum Repo URL
            NtpIp:
                default: IP / Address for the NTP Service
            RegistryServerIp:
                default: 'Ip and port of the bootstrap registry'
            RunDeploymentPlaybooks:
                default: Run Deployment Playbooks
            ElbScheme:
                default: ELB type

            SsoHost:
                default: Red Hat Single Sign-On  host
            SsoClientSecret:
                default: Red Hat Single Sign-On  client secret
            SsoGeoaxisIdentityProviderAlias:
                default: Red Hat Single Sign-On  Identity Provider alias

            # Alarm labels
            EnableAlarms:
                default: Enable Alarming
            CPUPercentage:
                default: Allowed CPU Utilization

            Classification:
                default: Classification

            # Storage
            EnableStorage:
                default: Deployment of Storage Resources
            LoggingEsPvcSize:
                default: Logging Storage Size (GB)
            MetricsStorageVolumeSize:
                default: Metrics Storage Size (GB)
            EnableStorageGlusterfsStorageclassDefault:
                default: Storage Glusterfs Storageclass Default
            EnableCloudformsInstall:
                default: Enable Cloudforms Install
            VolumeDeviceNamePrefix:
                default: Prefix used for Volume Device Names (i.e. xvdb or sdb )


Parameters:
  AmiId: 
    Default: ami-
    Description: Custom Redhat Linux AMI with AWS CLI and Partitions
    Type: AWS::EC2::Image::Id

  AnsibleInstanceType: #Openshift
    Default: m5.xlarge
    Description: Instance type of the Registry EC2 Instance
    Type: String

  MasterInstanceType: #Openshift
    Default: m5.xlarge
    Description: Instance type of the Master EC2 Instances
    Type: String

  NumberOfMasters: #Openshift
    Default: '3'
    Description: Number of Master EC2 Instances
    Type: String

  ComputeInstanceType: #Openshift
    Default: m5.xlarge
    Description: Instance type of the Compute EC2 Instances
    Type: String

  GPUInstanceType: #Openshift
    Default: p3.2xlarge
    Description: Instance type of the GPU EC2 Instances
    Type: String

  NumberOfComputes: #Openshift
    Default: '3'
    Description: Number of Compute EC2 Instances
    Type: String

  NumberOfGPU: #Openshift
    Default: '0'
    Description: Number of GPU EC2 Instances
    Type: String

  InfraInstanceType: #Openshift
    Default: m5.2xlarge
    Description: Instance type of the Infra EC2 Instances
    Type: String

  NumberOfInfras: #Openshift
    Default: '3'
    Description: Number of Infra EC2 Instances
    Type: String

  InfraStorageInstanceType: #Openshift
    Default: m5.xlarge
    Description: Instance type of the Infra Storage EC2 Instances
    Type: String

  NumberOfInfraStorages: #Openshift
    Default: '3'
    Description: Number of Infra Storage EC2 Instances
    Type: String

  ComputeStorageStackInstanceType: #Openshift
    Default: m5.xlarge
    Description: Instance type of the Compute Storage EC2 Instances
    Type: String

  NumberOfComputeStorages: #Openshift
    Default: '3'
    Description: Number of Compute Storage EC2 Instances
    Type: String

  KeyName: #EC2
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName

  S3ArtifactsPath: #S3
    Description: Bucket for Deployment Artifacts
    Default: 
    Type: String
    AllowedPattern: '.+'

  CreateIAMStack:
      Description: Creation of IAM child stack
      Type: String
      Default: true
      AllowedValues:
        - "true"
        - "false"

  EnableStorage:
    Description: Enable Deployment of Storage Resources
    Type: String
    Default: true
    AllowedValues:
      - "true"
      - "false"

  S3CredentialsPath: #S3
    Description: Bucket for Deployment Credentials files, i.e. public SSH-key
    Default: 
    Type: String
    AllowedPattern: '.+'

  S3RegistryPath:
    Description: Path to S3 Backed Container Registry
    Type: String
    Default: 
    AllowedPattern: '.+'

  PublicSubnetId1: #Network
    Type: AWS::EC2::Subnet::Id
    Description: A public subnet used for public ELBs
    Default: subnet-

  PublicSubnetId2: #Network
    Type: AWS::EC2::Subnet::Id
    Description: A public subnet used for public ELBs
    Default: subnet-

  PublicSubnetId3: #Network
    Type: AWS::EC2::Subnet::Id
    Description: A public subnet used for public ELBs
    Default: subnet-

  PrivateSubnetId1: #Network
    Type: AWS::EC2::Subnet::Id
    Description: A private subnet used to Auto-scaling groups
    Default: subnet-

  PrivateSubnetId2: #Network
    Type: AWS::EC2::Subnet::Id
    Description: A private subnet used to Auto-scaling groups
    Default: subnet-

  PrivateSubnetId3: #Network
    Type: AWS::EC2::Subnet::Id
    Description: A private subnet used to Auto-scaling groups
    Default: subnet-

  RootVolumeSize: #EC2
    Default: '50'
    Description: Root Volume Size
    Type: String

  AdditionalVolumeSize: #EC2
    Default: '200'
    Description: Additional (Var) Volume Size
    Type: String

  StorageVolumeSize:
    Default: '200'
    Description: Volume Size of Additional EBSs
    Type: Number

  Owner: #Creation
    Description: Name of the user instantiating the CloudFormation
    Type: String
    AllowedPattern: '.+'

  Ec2ServiceName: #EC2
    Description: Address of EC2 service
    Type: String
    Default: ec2.amazonaws.com

  S3ServiceName: #EC2
    Description: Address of S3 service
    Type: String
    Default: s3.amazonaws.com

  PartitionName: #Creation
    Description: Amazon Partition in which the resouce exists
    Type: String
    Default: aws

  EnableDNS:
    Description: Enable DNS
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  OpenshiftSubdomain:
    Description: Subdomain of OpenShift Cluster
    Type: String
    AllowedPattern: '.+'
    Default: example.com

  Password:
    NoEcho: true
    Description: Password for OpenShift
    Type: String
    AllowedPattern: '.+'

  CertificateArn:
    Description: 'Specify the arn of the certificate that will be presented'
    Type: String

  VpcId:
    Description: 'Vpc Id'
    Type: AWS::EC2::VPC::Id
    Default: ""

  VpcCIDR:
    Description: 'Vpc CIDR'
    Type: String
    Default: "10.3.0.0/16"

  OpenShiftVersion:
    Description: 'OpenShift Version'
    Type: String
    Default: "4.3.3"

  YumRepoURL:
    Description: URL for the Private YUM Repo Server (eg https://yumreposerver).  WARNING, If using s3, use the same service address as S3ServiceName Parameter.
    Type: String
    Default: "https://s3.amazonaws.com/"

  NtpIp:
    Description: IP / Address for the NTP Service
    Type: String
    Default: 169.254.169.123

  RegistryServerIp:
    Description: 'Ip address and port of the boot strap registry service'
    Type: String
    Default: "10.3.84.210:5000"

  S3RegistryCertificatesPath:
    Description: Path to folder with registry certificate files in S3 eg. <s3_bucket>/<folder_path>
    Type: String

  RunDeploymentPlaybooks:
    Description: Run Deployment Playbooks
    Type: String
    Default: true
    AllowedValues:
      - "true"
      - "true with verbose output"
      - "false"

  ElbScheme:
    Description: Makes ELBs either internet-facing or internal
    Type: String
    Default: "internet-facing"
    AllowedValues:
      - "internet-facing"
      - "internal"

  URL:
    Description: URL for Amazon service endpoints
    Type: String
    Default: amazonaws.com

  MyRegion:
    Description: Amazon Region endpoint to use
    Type: String
    Default: us-east-1

  # GeoAxis parameters
  SsoHost:
    Description: Red Hat Single Sign-On  host
    Type: String
    Default: ""

  SsoClientSecret:
    Description: Red Hat Single Sign-On  client secret
    Type: String
    Default: ""

  SsoGeoaxisIdentityProviderAlias:
    Description: Red Hat Single Sign-On  Identity Provider alias
    Type: String
    Default: GEOAxIS

  # Alarm parameters
  EnableAlarms:
    Description: Enable Alarming
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  CPUPercentage:
    Description: 1% - 99%
    Type: String
    AllowedPattern: '\d{1,2}'
    Default: 80

  # Classification parameter
  Classification:
    Description: Classification
    Type: String
    Default: Unclassified
    AllowedValues:
      - Unclassified
      - Confidential
      - Secret
      - TopSecret

  # Storage
  LoggingEsPvcSize:
    Default: '10'
    Description: Logging Storage Size (GB)
    Type: Number

  MetricsStorageVolumeSize:
    Default: '20'
    Description: Metrics Storage Size (GB)
    Type: Number

  EnableStorageGlusterfsStorageclassDefault:
    Description: Enable Storage Glusterfs Storageclass Default
    Type: String
    Default: true
    AllowedValues:
      - "true"
      - "false"

  EnableCloudformsInstall:
    Description: Enable Cloudforms Install
    Type: String
    Default: true
    AllowedValues:
      - "true"
      - "false"

  VolumeDeviceNamePrefix:
    Description: Prefix used for Volume Device Names (i.e. xvdb or sdb )
    Type: String
    Default: "xv"
    AllowedValues:
      - "s"
      - "xv"


Mappings:
  ClassificationMap:
      "Unclassified":
        ClassificationText: "UNCLASSIFIED"
        ClassificationScript: unclassified.js
        ClassificationColor: "#5cb85c"
      "Confidential":
        ClassificationText: "CONFIDENTIAL"
        ClassificationScript: confidential.js
        ClassificationColor: "#286090"
      "Secret":
        ClassificationText: "SECRET"
        ClassificationScript: secret.js
        ClassificationColor: "#d9534f"
      "TopSecret":
        ClassificationText: "TOP SECRET"
        ClassificationScript: topsecret.js
        ClassificationColor: "#f0ad4e"

Conditions:
  CreateIAMResources: !Equals [ !Ref CreateIAMStack, true ]
  CreateDNSResources: !Equals [ !Ref EnableDNS, true ]
  CreateAlarmResources: !Equals [ !Ref EnableAlarms, true ]
  CreateStorageResources: !Not [ !Equals [!Ref NumberOfComputeStorages, 0]]
  CreateStorageCloudwatch: !And
  - !Condition CreateAlarmResources
  - !Condition CreateStorageResources
  CreateGPUResources: !Not [ !Equals  [!Ref NumberOfGPU, 0 ]]

Resources:

# CF Stacks that need to be run
# Broken down the way they are in the official OpenShift Origin Repo on github
# 01_vpc.yaml
# 02_cluster_infra.yaml
# 03_cluster_security_groups.yaml
# 03_cluster_security.yaml
# 04_cluster_bootstrap.yaml
# 05_cluster_master_nodes.yaml
# 06_cluster_worker_node.yaml



  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-security-groups.yml'
      Parameters:
        StackName: !Ref AWS::StackName
        VpcId: !Ref VpcId
        VpcCIDR: !Ref VpcCIDR

  IAMStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateIAMResources
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-iam-roles.yml'
      Parameters:
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        S3RegistryPath: !Sub '${S3RegistryPath}'
        Ec2ServiceName: !Sub '${Ec2ServiceName}'
        PartitionName: !Sub '${PartitionName}'

  AnsibleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-ansible.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${AnsibleInstanceType}'
        KeyName: !Sub '${KeyName}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ServiceName: !Sub '${S3ServiceName}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        S3RegistryPath: !Sub '${S3RegistryPath}'
        SecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftAnsibleSecurityGroup}'
        OutboundSecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup}'
        SubnetId: !Sub '${PrivateSubnetId1}'
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftAnsibleInstanceProfile, !ImportValue AnsibleInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        StackName: !Ref AWS::StackName
        OpenshiftMasterDefaultSubdomain: !Sub '${AWS::StackName}-apps.${OpenshiftSubdomain}'
        OpenshiftMasterClusterPublicHostname: !Sub '${AWS::StackName}-masters.${OpenshiftSubdomain}'
        Password: !Sub '${Password}'
        OpenShiftVersion: !Sub '${OpenShiftVersion}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        S3RegistryCertificatesPath: !Sub '${S3RegistryCertificatesPath}'
        StorageVolumeSize: !Sub '${StorageVolumeSize}'
        NumberOfMasters: !Sub '${NumberOfMasters}'
        NumberOfComputes: !Sub '${NumberOfComputes}'
        NumberOfGPU: !Sub '${NumberOfGPU}'
        NumberOfInfras: !Sub '${NumberOfInfras}'
        NumberOfInfraStorages: !Sub '${NumberOfInfraStorages}'
        NumberOfComputeStorages: !Sub '${NumberOfComputeStorages}'
        RunDeploymentPlaybooks: !Sub '${RunDeploymentPlaybooks}'
        NtpIp: !Sub '${NtpIp}'
        SsoHost: !Sub '${SsoHost}'
        SsoClientSecret: !Sub '${SsoClientSecret}'
        SsoGeoaxisIdentityProviderAlias: !Sub '${SsoGeoaxisIdentityProviderAlias}'
        ClassificationText: !FindInMap [ClassificationMap, !Ref "Classification", ClassificationText]
        ClassificationScript: !FindInMap [ClassificationMap, !Ref "Classification", ClassificationScript]
        ClassificationColor: !FindInMap [ClassificationMap, !Ref "Classification", ClassificationColor]
        LoggingEsPvcSize: !Sub '${LoggingEsPvcSize}'
        MetricsStorageVolumeSize: !Sub '${MetricsStorageVolumeSize}'
        EnableStorageGlusterfsStorageclassDefault: !Sub '${EnableStorageGlusterfsStorageclassDefault}'
        EnableCloudformsInstall: !Sub '${EnableCloudformsInstall}'
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        EnableStorage: !Sub '${EnableStorage}'


  MasterStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnsibleStack
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-master.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${MasterInstanceType}'
        KeyName: !Sub '${KeyName}'
        NumberOfNodes: !Sub '${NumberOfMasters}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ServiceName: !Sub '${S3ServiceName}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftMasterSecurityGroup
        OutboundSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup
        PublicElbSecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftPublicMasterElbSecurityGroup}'
        PrivateElbSecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftPrivateMasterElbSecurityGroup}'
        PublicSubnetId1: !Ref PublicSubnetId1
        PublicSubnetId2: !Ref PublicSubnetId2
        PublicSubnetId3: !Ref PublicSubnetId3
        PrivateSubnetId1: !Ref PrivateSubnetId1
        PrivateSubnetId2: !Ref PrivateSubnetId2
        PrivateSubnetId3: !Ref PrivateSubnetId3
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftMasterInstanceProfile, !ImportValue MasterInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        StackName: !Ref AWS::StackName
        NodeType: 'Master'
        CertificateArn: !Sub '${CertificateArn}'
        VpcId: !Sub '${VpcId}'
        ElbScheme: !Ref ElbScheme
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        MyRegion: !Sub '${MyRegion}'
        URL: !Sub '${URL}'

  InfraStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnsibleStack
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-infra.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${InfraInstanceType}'
        KeyName: !Sub '${KeyName}'
        NumberOfNodes: !Sub '${NumberOfInfras}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftInfraSecurityGroup
        OutboundSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup
        ElbSecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftInfraElbSecurityGroup}'
        PublicSubnetId1: !Ref PublicSubnetId1
        PublicSubnetId2: !Ref PublicSubnetId2
        PublicSubnetId3: !Ref PublicSubnetId3
        PrivateSubnetId1: !Ref PrivateSubnetId1
        PrivateSubnetId2: !Ref PrivateSubnetId2
        PrivateSubnetId3: !Ref PrivateSubnetId3
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftInfraInstanceProfile, !ImportValue InfraInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        StackName: !Ref AWS::StackName
        NodeType: 'Infra'
        CertificateArn: !Sub '${CertificateArn}'
        ElbScheme: !Ref ElbScheme
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        MyRegion: !Sub '${MyRegion}'
        URL: !Sub '${URL}'


  ComputeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnsibleStack
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-compute.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${ComputeInstanceType}'
        KeyName: !Sub '${KeyName}'
        NumberOfNodes: !Sub '${NumberOfComputes}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftComputeSecurityGroup
        OutboundSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup
        PrivateSubnetId1: !Ref PrivateSubnetId1
        PrivateSubnetId2: !Ref PrivateSubnetId2
        PrivateSubnetId3: !Ref PrivateSubnetId3
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftComputeInstanceProfile, !ImportValue ComputeInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        StackName: !Ref AWS::StackName
        NodeType: 'Compute'
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        MyRegion: !Sub '${MyRegion}'
        URL: !Sub '${URL}'

  GPUStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnsibleStack
    Condition: CreateGPUResources
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-gpu.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${GPUInstanceType}'
        KeyName: !Sub '${KeyName}'
        NumberOfNodes: !Sub '${NumberOfGPU}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        SecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftComputeSecurityGroup}'
        OutboundSecurityGroupId: !Sub '${SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup}'
        PrivateSubnetId1: !Ref PrivateSubnetId1
        PrivateSubnetId2: !Ref PrivateSubnetId2
        PrivateSubnetId3: !Ref PrivateSubnetId3
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftComputeInstanceProfile, !ImportValue ComputeInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        StackName: !Ref AWS::StackName
        NodeType: 'GPU'
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        MyRegion: !Sub '${MyRegion}'
        URL: !Sub '${URL}'


  ComputeStorageStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnsibleStack
    Condition: CreateStorageResources
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-storage.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${ComputeStorageStackInstanceType}'
        KeyName: !Sub '${KeyName}'
        NumberOfNodes: !Sub '${NumberOfComputeStorages}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftStorageSecurityGroup
        OutboundSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup
        PrivateSubnetId1: !Ref PrivateSubnetId1
        PrivateSubnetId2: !Ref PrivateSubnetId2
        PrivateSubnetId3: !Ref PrivateSubnetId3
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftComputeInstanceProfile, !ImportValue ComputeInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        StackName: !Ref AWS::StackName
        NodeType: 'Compute Storage'
        StorageVolumeSize: !Sub '${StorageVolumeSize}'
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        MyRegion: !Sub '${MyRegion}'
        URL: !Sub '${URL}'

  InfraStorageStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnsibleStack
    Condition: CreateStorageResources
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-storage.yml'
      Parameters:
        AmiId: !Sub '${AmiId}'
        InstanceType: !Sub '${InfraStorageInstanceType}'
        KeyName: !Sub '${KeyName}'
        NumberOfNodes: !Sub '${NumberOfInfraStorages}'
        RootVolumeSize: !Sub '${RootVolumeSize}'
        AdditionalVolumeSize: !Sub '${AdditionalVolumeSize}'
        S3ArtifactsPath: !Sub '${S3ArtifactsPath}'
        S3CredentialsPath: !Sub '${S3CredentialsPath}'
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftStorageSecurityGroup
        OutboundSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.OpenShiftOutboundSecurityGroup
        PrivateSubnetId1: !Ref PrivateSubnetId1
        PrivateSubnetId2: !Ref PrivateSubnetId2
        PrivateSubnetId3: !Ref PrivateSubnetId3
        Owner: !Sub '${Owner}'
        InstanceProfile: !If [CreateIAMResources, !GetAtt IAMStack.Outputs.OpenShiftComputeInstanceProfile, !ImportValue ComputeInstanceProfileOutput]
        YumRepoURL: !Sub '${YumRepoURL}'
        RegistryServerIp: !Sub '${RegistryServerIp}'
        StackName: !Ref AWS::StackName
        NodeType: 'Infra Storage'
        StorageVolumeSize: !Sub '${StorageVolumeSize}'
        VolumeDeviceNamePrefix: !Sub '${VolumeDeviceNamePrefix}'
        MyRegion: !Sub '${MyRegion}'
        URL: !Sub '${URL}'

  # This stack is a helper for commerical AWS only
  DnsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateDNSResources
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-dns.yml'
      Parameters:
        StackName: !Ref AWS::StackName
        OpenshiftSubdomain: !Sub '${OpenshiftSubdomain}'
        MasterELBCanonicalHostedZoneNameID: !GetAtt 'MasterStack.Outputs.PublicElbHostedZoneNameID'
        MasterDNSName: !GetAtt 'MasterStack.Outputs.PublicElbDnsName'
        InfraELBCanonicalHostedZoneNameID: !GetAtt 'InfraStack.Outputs.PublicElbHostedZoneNameID'
        InfraDNSName: !GetAtt 'InfraStack.Outputs.ClassicElbDnsName'

  CloudwatchAlarmStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateAlarmResources
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-cloudwatch-alarms.yml'
      Parameters:
        StackName: !Ref AWS::StackName
        CPUPercentage: !Sub '${CPUPercentage}'
        MasterASG: !Sub '${MasterStack.Outputs.ASGResourceName}'
        InfraASG: !Sub '${InfraStack.Outputs.ASGResourceName}'
        ComputeASG: !Sub '${ComputeStack.Outputs.ASGResourceName}'

  StorageCloudwatchAlarmStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateStorageCloudwatch
    Properties:
      TemplateURL: !Sub 'https://${S3ServiceName}/${S3ArtifactsPath}/openshift4-disconnected/cloudformation/open-shift-storage-cloudwatch-alarms.yml'
      Parameters:
        StackName: !Ref AWS::StackName
        CPUPercentage: !Sub '${CPUPercentage}'
        InfraStorageASG: !Sub '${InfraStorageStack.Outputs.ASGResourceName}'
        ComputeStorageASG: !Sub '${ComputeStorageStack.Outputs.ASGResourceName}'

Outputs:
  MasterStackPublicElbName:
    Description: The Master Public ELB Name
    Value: !GetAtt 'MasterStack.Outputs.MasterStackPublicElbName'
  MasterStackPublicElbDnsName:
    Description: The Master Public ELB DNS
    Value: !GetAtt 'MasterStack.Outputs.PublicElbDnsName'
  MasterStackPrivateElbName:
    Description: The Master Private ELB Name
    Value: !GetAtt 'MasterStack.Outputs.MasterStackPrivateElbName'
  MasterStackPrivateElbDnsName:
    Description: The Master Private ELB DNS
    Value: !GetAtt 'MasterStack.Outputs.PrivateElbDnsName'
  InfraStackPublicElbName:
    Description: The Infra Public ELB Name
    Value: !GetAtt 'InfraStack.Outputs.InfraStackPublicElbName'
  InfraStackPublicElbDnsName:
    Description: The Infra Public ELB DNS
    Value: !GetAtt 'InfraStack.Outputs.ClassicElbDnsName'
