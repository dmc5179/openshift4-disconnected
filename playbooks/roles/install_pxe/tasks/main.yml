---
# tasks file for install_pxe

- name: Install tftp packages
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ pxeserver_packages }}"
  tags:
    - pxeserver

- name: Create directory for PXEboot related files
  file:
    path: "{{ pxeserver_path }}"
    state: directory
  tags:
    - pxeserver
    - pxedir

# TODO: with_fileglob is a local operation so this doesn't work right
- name: Make Network Boot Programs for BIOS based systems available
  copy:
    src: '{{ item }}'
    dest: '{{ pxeserver_path }}'
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  with_fileglob:
    - '/usr/share/syslinux/*'
  tags:
    - pxeserver

- name: Make Network Boot Programs for UEFI based systems available
  copy:
    src: '{{ item }}'
    dest: '{{ pxeserver_path }}'
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  with_items:
    - '{{ pxeserver_efi_files }}'
  when: (uefi_enabled | bool)
  tags:
    - pxeserver

- name: Create directory for PXE server configuration
  file:
    path: "{{ pxeserver_path }}"
    state: directory
  tags:
    - pxeserver

- name: Create directory for boot images
  file:
    path: "{{ pxeserver_path }}/rhcos"
    state: directory
  tags:
    - pxeserver

- name: Copy legacy initramfs.img
  copy:
    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-installer-initramfs.{{ arch }}.img'
    dest: '{{ pxeserver_path }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-installer-initramfs.{{ arch }}.img'
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  when: ( rhcos_ver[:3] | float < 4.6 )
  tags:
    - pxeserver

- name: Copy liveos initramfs.img
  copy:
    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-live-initramfs.{{ arch }}.img'
    dest: '{{ pxeserver_path }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-live-initramfs.{{ arch }}.img'
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  when: ( rhcos_ver[:3] | float >= 4.6 )
  tags:
    - pxeserver

- name: Copy legacy kernel
  copy:
    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-installer-kernel-{{ arch }}'
    dest: '{{ pxeserver_path }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-installer-kernel-{{ arch }}'
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  when: ( rhcos_ver[:3] | float < 4.6 )
  tags:
    - pxeserver

#- name: Create RHCOS directory for http server
#  become: true
#  file:
#    path: '{{ httpd_document_root }}/rhcos'
#    state: directory
#    owner: root
#    group: root
#    mode: 0755
#  when: ( rhcos_ver[:3] | float >= 4.6 )
#  tags:
#    - pxeserver

- name: Copy liveos kernel
  copy:
    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-live-kernel-{{ arch }}'
    dest: '{{ pxeserver_path }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-live-kernel-{{ arch }}'
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  when: ( rhcos_ver[:3] | float >= 4.6 )
  tags:
    - pxeserver

#- name: Copy liveos rootfs
#  copy:
#    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-live-rootfs.{{ arch }}.img'
#    dest: '{{ httpd_document_root }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-live-rootfs.{{ arch }}.img'
#    owner: root
#    group: root
#    mode: '0644'
#    remote_src: true
#  when: ( rhcos_ver[:3] | float >= 4.6 )
#  tags:
#    - pxeserver

#- name: Copy liveos metal
#  copy:
#    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-metal.{{ arch }}.raw.gz'
#    dest: '{{ httpd_document_root }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-metal.{{ arch }}.raw.gz'
#    owner: root
#    group: root
#    mode: '0644'
#    remote_src: true
##  when: ( rhcos_ver[:3] | float >= 4.6 )
#  tags:
#    - pxeserver

#- name: Set the default tftp file
#  template:
#    src: "templates/pxe-default.j2"
#    dest: "{{ pxeserver_path }}/default"
#    mode: 0555

#- name: Set the bootstrap specific tftp file
#  template:
#    src: "templates/pxe-bootstrap.j2"
#    dest: "{{ pxeserver_path }}/pxe-bootstrap"
#    mode: 0555

#- name: Set the master specific tftp files
#  template:
#    src: "templates/pxe-master.j2"
#    dest: "{{ pxeserver_path }}/pxe-master"
#    mode: 0555

#- name: Set the worker specific tftp files
#  template:
#    src: "templates/pxe-worker.j2"
#    dest: "{{ pxeserver_path }}/pxe-worker"
#    mode: 0555

#- name: Assign hosts to a boot menu
#  file:
#    src: 'pxe-{{ item.type }}'
#    dest: '{{ pxeserver_path }}/{{ item.ip | ip4_hex | upper }}'
#    owner: root
#    group: root
#    state: link
#  with_items:
#    - '{{ openshift_bootstrap }}'
#    - '{{ openshift_masters }}'
#    - '{{ openshift_workers }}'

- name: Set the pxe specific tftp files
  template:
    src: "templates/pxe-{{ item.type }}.j2"
    dest: "{{ tftp_root_directory }}/pxelinux.cfg/01-{{ item.mac | regex_replace(':','-') }}"
    mode: 0644
  when: ( not uefi_enabled | bool )
  with_items:
    - '{{ openshift_bootstrap }}'
    - '{{ openshift_masters }}'
    - '{{ openshift_workers }}'

- name: Set the pxe specific tftp files
  template:
    src: "templates/pxe-uefi-{{ item.type }}.j2"
    dest: "{{ tftp_root_directory }}/grub.cfg-01-{{ item.mac | regex_replace(':','-') }}"
    mode: 0644
  when: ( uefi_enabled | bool )
  with_items:
    - '{{ openshift_bootstrap }}'
    - '{{ openshift_masters }}'
    - '{{ openshift_workers }}'

- name: Populate service facts
  service_facts:

- name: Configure firewall for TFTP Server
  firewalld:
    permanent: true
    immediate: true
    state: enabled
    port: "{{ item }}"
  with_items:
    - 69/udp
  when:
    ('firewalld.service' in services) and
    (ansible_facts.services["firewalld.service"].state is match("running"))

- name: Start and enable tftp server
  systemd:
    name: tftp
    state: started
    enabled: true
    masked: false
    daemon_reload: true
