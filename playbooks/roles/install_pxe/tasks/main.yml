---
# tasks file for install_pxe

- name: Install tftp packages
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ pxeserver_packages }}"
  tags:
    - pxeserver

- name: Create directory for PXEboot related files
  file:
    path: "{{ pxeserver_path }}"
    state: directory
  tags:
    - pxeserver

- name: Make Network Boot Programs for BIOS and UEFI based systems available
  copy:
    remote_src: true
    src: '{{ item }}'
    dest: '{{ pxeserver_path }}/'
    owner: root
    group: root
    mode: '0644'
  with_items:
    - "{{ pxeserver_files }}"
  tags:
    - pxeserver

- name: Create directory for PXE server configuration
  file:
    path: "{{ pxeserver_path }}/pxelinux.cfg"
    state: directory
  tags:
    - pxeserver

- name: Create directory for boot images
  file:
    path: "{{ pxeserver_path }}/rhcos"
    state: directory
  tags:
    - pxeserver

  # TODO: Would prefer the destination name was unique
- name: Copy initramfs.img
  copy:
    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-installer-initramfs.{{ arch }}.img'
    dest: '{{ pxeserver_path }}/rhcos/initramfs.img'
    owner: root
    group: root
    mode: '0644'
  tags:
    - pxeserver

  # TODO: Would prefer the destination name was unique
- name: Copy kernel
  copy:
    remote_src: true
    src: '{{ mirror_base }}/rhcos/rhcos-{{ rhcos_ver }}-{{ arch }}-installer-kernel-{{ arch }}'
    dest: '{{ pxeserver_path }}/rhcos/kernel'
    owner: root
    group: root
    mode: '0644'
  tags:
    - pxeserver

- name: Set the default tftp file
  template:
    src: ../templates/default.j2
    dest: "{{ pxeserver_path }}/pxelinux.cfg/default"
    mode: 0555

- name: Set the bootstrap specific tftp file
  template:
    src: "templates/pxe-bootstrap.j2"
    dest: "{{ pxeserver_path }}/pxelinux.cfg/pxe-bootstrap"
    mode: 0555

- name: Set the master specific tftp files
  template:
    src: "templates/pxe-master.j2"
    dest: "{{ pxeserver_path }}/pxelinux.cfg/pxe-master"
    mode: 0555

- name: Set the worker specific tftp files
  template:
    src: "templates/pxe-worker.j2"
    dest: "{{ pxeserver_path }}/pxelinux.cfg/pxe-worker"
    mode: 0555

- name: Assign hosts to a boot menu
  file:
    src: 'pxe-{{ item.type }}'
    dest: '{{ pxeserver_path }}/pxelinux.cfg/{{ item.ip | ip4_hex }}'
    owner: root
    group: root
    state: link
  with_items:
    - '{{ openshift_bootstrap }}'
    - '{{ openshift_masters }}'
    - '{{ openshift_workers }}'

- name: Populate service facts
  service_facts:

- name: Configure firewall for TFTP Server
  firewalld:
    permanent: true
    immediate: true
    state: enabled
    port: "{{ item }}"
  with_items:
    - 69/udp
  when:
    ('firewalld.service' in services) and
    (ansible_facts.services["firewalld.service"].state is match("running"))

- name: Start and enable tftp server
  systemd:
    name: tftp
    state: started
    enabled: true
    daemon_reload: true
